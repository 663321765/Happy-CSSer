$c-white: #fff;
$c-cell-bgc: #ccc8fd;
$c-shadow-avatar: #aea8f3;

$bg-gradient: linear-gradient($c-white, #c8e0ff);

@mixin fill-full($dir: 'full', $type: absolute) {
  position: $type;
  @if $dir != 'top' {bottom: 0; }
  @if $dir != 'left' {right: 0; }
  @if $dir != 'right' {left: 0; }
  @if $dir != 'bottom' {top: 0; }
}

.app {
  position: relative;
  margin-left: auto;
  margin-right: auto;
  padding: 5em 5vmin;
  text-align: center;
  font-family: sans;
  line-height: 1;

  &::before {
    content: '';
    @include fill-full('full', fixed);
    z-index: -1;
    pointer-events: none;
    background-image: $bg-gradient;
  }
}

.header {
  @include fill-full('top', fixed);
  z-index: 10;
  overflow: hidden;
  padding-top: 4vh;
  padding-bottom: .5em;
  background-color: $c-white;
  text-transform: uppercase;
  background: $bg-gradient 50% 0 / 100vw 50vh no-repeat;
  box-shadow: 0 1px 5px $c-shadow-avatar;
}

.title {
  font-size: 1.5rem;
  font-weight: 400;
}

.subtitle {
  padding-top: .5em;
  opacity: .5;
  font-size: inherit;
  font-weight: 300;

  @mixin subtitle-gap ($size: .5em) {
    padding-left: $size;
    padding-right: $size;
  }

  &::before {
    content: 'caught: ' attr(data-caught);
    @include subtitle-gap;
  }

  &::after {
    content:  'seen: ' attr(data-seen);;
    @include subtitle-gap;
  }
}

.wall {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(15vmin, 1fr));
  grid-gap: 1vmin;
}

.cell {
  position: relative;
  counter-increment: pm-counter;

  &::before {
    content: '';
    display: block;
    padding-bottom: 100%;
  }
}

.pm {
  @include fill-full;
  color: $c-white;
  background-size: 0% 0%;
  background-repeat: no-repeat;

  // pm avatar
  &:not([data-state="unknown"])::before {
    content: '';
    @include fill-full;
    z-index: 2;
    background-image: inherit;
    background-position: 50%;
    background-size: cover;
    background-repeat: no-repeat;
  }

  // pm avatar shadow image effect
  &[data-state="seen"]::before {
    filter: contrast(0) opacity(20%);
    mix-blend-mode: difference;
  }

  // square with border-radius in background
  &:not([data-state="caught"])::after {
    content: '';
    @include fill-full;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1;
    border-radius: 15%;
    background-color: $c-cell-bgc;
    font-size: calc(5vmin);
  }

  // pm index
  &[data-state="unknown"]::after {
    content: counter(pm-counter);
  }
}

/*
.app
  header.header
    h1.title pokedex
    h2(data-caught="144", data-seen="147")

  main.wall
    .cell
      .pm
*/

// reset forcely

:root {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: inherit;

  // box-shadow: inset 0 0 1px;

  &::before,
  &::after {
    box-sizing: inherit;
  }
}
